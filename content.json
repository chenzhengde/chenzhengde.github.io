{"pages":[],"posts":[{"title":"Preview INT201 W1","text":"This is the preview note of INT201(Decision Computation and Language). The lecture of this week is mainly discussing about Preliminaries: principal mathematical ideas necessary to understand the material of the course. Decision, Computation and LanguageThis module is about the theory of computation and answering the question: “What are the fundamental capabilities and limitations of computers?” 这个模块是关于计算理论的，并回答这个问题:“计算机的基本能力和局限性是什么?”The central theme: Are the languagues, their membership problems can not be solved (computed) Algorithmically. Lecture 1LanguageFormal languages have the property that there is a precise rule that governs what strings belong to the language.正式语言包括了programming languages, database query languages, various file formats.然而English, Mandarin这种并不是Formal languages. what the module is about notations for representing formal languages. These give us ways to define them precisely ways to build compilers that recognise the languages ways to check whether a string of symbols belongs to a language whether two alternative descriptions of languages are actually the same language tools to analyse languages natural languages (NL): want to recognise valid sentence programming languages (PL): want to recognise valid program Some notations/methods for describing a language (other than explicitly listing it) include finite state automaton 有限状态自动机 regular expressions 正则表达式 context-free grammar 上下文无关语法 pushdown Automation 叠加自动化 Turing machine 图灵机 Observations 语法可以生成毫无意义的句子。 可以生成任意长的句子。 语义可以根据语法来确定，例如由单词“and”组成的子句的逻辑连接。 语法可以扩展到处理从句、副词等。 你不能完全用这种方式定义自然语言句子，但你可以用这种方式定义编程语言。 Stages of compilation lexical analysis: divide sequence of characters into tokens, such as variable names, operators, labels. In a natural language tokens are strings of consecutive letters (easy to recognise!) 将字符序列划分为符号 parsing: identify relationships between tokens 辨别符号之间的关系 code generation: generate object code 集成目标代码 code optimisation 代码优化 lexical analysis1pay=salary+(overtimerate*overtime); Break into tokens as follows: 12345678pay=salary+( overtimerate ∗overtime); Parse Tree Definitions and notationNothing serious, man. LanguagesSame as the above one. Lecture 2Deterministic Finite Automata 确定性有限自动机Can be used a model for what happens during lexical analysis — scan program from beginning to end and divide it into tokens. 可以用一个模型来描述词法分析过程中发生的事情——从头到尾扫描程序，并将其划分为标记。Finite automata are used to specify tokens of programming languages. 有限自动机用于指定编程语言的标记。Also used in “model checking”, reasoning about systems with objective of proving they satisfy useful properties. 也用于“模型检验”，即以证明系统满足有用性质为目标的推理。Also used in statistical models for analysing biological and textual sequences. 也用于分析生物和文本序列的统计模型。 A deterministic finite automaton (DFA) has 5 components: Q is a finite nonempty set whose members are called states of theautomaton; Q是一个有限的非空集，其成员称为自动机的状态; A is a finite nonempty set called the alphabet of the automaton; A是一个有限的非空集被叫做字母表的自动机; φ is a map from Q × A to Q called the transition function of the automaton; φ是一个从Q × a到Q的映射，称为自动机的转移函数; i is a member of Q and is called the initial state; i是Q的一个元素，称为初始状态; T is a nonempty subset of Q whose members are called terminal states or accepting states. T是Q的一个非空子集，其成员称为终端状态或接受状态。 State of a machine tells you something about the prefix that has been read so far. If the string is a member of the language of interest, the state reached when the whole string has been scanned will be an accepting state (a member of T ). 机器的状态告诉您有关到目前为止已读取的前缀的一些信息。如果字符串是感兴趣的语言的成员，当整个字符串被扫描时达到的状态将是接受状态。Transition function φ tells you how state should change when an additional letter is read by the DFA转移函数φ告诉你当DFA读取一个额外的字母时状态应该如何变化。DFA常被描述为一个有标记的有向图。 Initially the state is i and if the input word is w = a1a2 …an then, as each letter is read, the state changes and we get q1, q2, . . . , qn defined by An important observationAny DFA that uses the convention that an undefined transition leads to a rejection, can be converted to a DFA that uses a total transition function (that is, one that is defined for all combinations of input symbols and states). The convention is useful, but it does not add extra expressive power. 任何使用未定义转换导致拒绝约定的DFA，都可以转换为使用总转换函数(即为所有输入符号和状态组合定义的转换函数)的DFA。这种约定是有用的，但并没有增加额外的表达能力。 Any finite language is accepted by some DFAGeneral rule: i is the initial state. For each prefix p of a word in the list, include state sp with the idea that the machine should be in state sp after p has been read. i是初始状态。对于列表中每个单词的前缀p，包含状态sp，即在读取p之后，机器应该处于状态sp。 References XJTLU MC PowerPoint slides (INT201 Lecture1 &amp; Lecture2)","link":"/2021/08/15/Preview-INT201-W1/"},{"title":"hexo部署步骤变化","text":"Problem今天写完blog上传的时候，发现原来的GitHub输入用户名再输入密码push的方式没用了，报错如下: 1234567891011remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information.fatal: unable to access 'https://github.com/chenzhengde/chenzhengde.github.io.git/': The requested URL returned error: 403FATAL { err: Error: Spawn failed at ChildProcess.&lt;anonymous&gt; (/Users/chenzhengde/Library/Mobile Documents/com~apple~CloudDocs/大三上学期/myblog/node_modules/hexo-util/lib/spawn.js:51:21) at ChildProcess.emit (events.js:400:28) at Process.ChildProcess._handle.onexit (internal/child_process.js:277:12) { code: 128 }} Something's wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html Solution经过Google发现，原来从8月13日起GitHub不在接受GitHub.com上的Git操作验证账户密码。必须使用基于令牌的身份验证进行操作。没有办法就去生成了一个personal token存放在印象笔记里。然后使用MacOS的钥匙串，进入GitHub所储存的密码，把含有互联网密码的密码全部改成了personal token。现在的上传步骤: Github用户名 Personal token 正常钥匙串密码 References Mac が覚えている GitHub のパスワードをパーソナルアクセストークンに変更する Git password authentication is shutting down","link":"/2021/08/14/hexo%E9%83%A8%E7%BD%B2%E6%AD%A5%E9%AA%A4%E5%8F%98%E5%8C%96/"},{"title":"Preview CPT203 W1","text":"This is the preview note of CPT203 (Software Engineering I). The lecture of W1 is mainly discussing about Intro to Software Engineering. Understand what software engineering is and why it is important. Understand that the development of different types of software systems may require different software engineering techniques. Understand some ethical and professional issues that are important for software engineers. Chapter 1 is recommended for reference. BasicWhat’s a computer software?Computer software is the product that software professionals build and then support over the long term. It encompasses computer programs and associated documentation that execute within a computer of any size and architecture. Software products may be developed for a particular customer or may be developed for a general market. 计算机软件是软件专业人员构建并长期支持的产品。它包括在任何大小和结构的计算机中执行的计算机程序和相关的文档。软件产品可能是针对特定客户开发的，也可能是针对一般市场开发的。 Why is it important?Hence it affects nearly every aspect of our lives and has become pervasive(无处不在的) in our commerce, our culture, and our everyday activities. 影响人们生活的各个方面… What is software engineering?Software engineering is an engineering discipline that is concerned with all aspects of software production. 软件工程是一门涉及软件生产的各个方面的工程学科。 IntroductionSoftware engineering is essential for the functioning of national and international societies. 不可缺少的。 Software failure &amp; successSoftware engineering is criticized as inadequate for modern software development. 被批评不适合现代软件开发。(wtf哪什么适合?) Two factors of failures increasing demands 增加的需求 low expectations 低期望值 However, we’re still gonna learn these shits.😅 Professional software development Amateur People in business write spreadsheet programs to simplify their jobs scientists and engineers write programs to process their experimental data hobbyists write programs for their own interest and enjoyment Professional vast majority of software development is a professional activity where software is developed for specific business purposes, for inclusion in other devices, or as software products such as information systems, CAD systems, etc. intended for use by someone apart from its developer is usually developed by teams rather than individuals It is maintained and changed throughout its life. Four important attributesFour important attributes that all professional software Maintainability 可维护性 Dependability and security 可靠性和安全性 Efficiency 效率 Acceptability 可接受性 Two kinds of software products Generic software products Customized software products The distinction between these system product types is becoming increasingly blurred. 两者之间的界限越来越模糊。 Software deterioration软件恶化软件是逻辑的而不是物理的系统元素，所以软件不会磨损。因此软件的故障率曲线应该是如图所示的“理想曲线”的形式，但实际上，在其生命周期内，软件将经历变化。当进行更改时，很可能会引入错误，导致故障率曲线出现如“实际曲线”所示的峰值。 Software engineeringSoftware engineering is an engineering discipline that is concerned with all aspects of software production from the early stages of system specification through to maintaining the system after it has gone into use. 软件工程是一门工程学科，它涉及软件生产的各个方面，从系统规范的早期阶段到系统投入使用后的维护。 Engineering discipline工程纪律就是软件工程师工作的纪律规定。 All aspects of software production软件工程不仅仅涉及软件开发的技术过程。它还包括诸如软件项目管理和支持软件生产的工具、方法和理论的开发等活动。 Software engineering approachesA software process is a sequence of activities that leads to the production of a software product. 在软件工程中使用的系统方法被称为software process。Four fundamental activities: Software specification 软件规范 Software development 软件开发 Software validation 软件验证 Software evolution 软件进化 Software engineering diversityDifferent types of systems need different development processes. Software engineering is a systematic approach to the production of software that takes into account practical cost, schedule, and dependability issues, as well as the needs of software customers and producers. 软件工程是软件生产的一种系统方法，考虑实际成本、进度和可靠性问题，以及软件客户和生产商的需求。 How this systematic approach is actually implemented varies dramatically depending on the organization developing the software, the type of software, and the people involved in the development process. 根据软件开发的组织、软件的类型以及参与开发过程的人员的不同，这种系统方法的实际实现方式有很大的不同。 Two major approaches: Sequential 顺序 Iterative 迭代 Software engineering ethics You must also behave in an ethical and morally responsible way if you are to be respected as a professional engineer. 作为一名专业工程师，如果你想受到尊重，你的行为必须符合道德规范和负责任的态度。 You should not use your skills and abilities to behave in a dishonest way or in a way that will bring disrepute to the software engineering profession. 你不应该使用你的技能和能力以一种不诚实的方式行事，或者以一种会给软件工程专业带来声誉的方式行事。 在某些领域，可接受的行为标准不受法律约束，而是受到更模糊的职业责任概念的约束。 Confidentiality 保密 Competence 能力 Intellectual property rights 知识产权 Computer misuse 计算机滥用 References XJTLU MC PowerPoint Slides (CPT203 Week1 Lecture1)","link":"/2021/08/14/Preview-CPT203-W1/"},{"title":"Preview CAN201 W1","text":"This is the preview note of CAN201(introduction to networking). The lecture of W1 is mainly discussing about Internet. What’s the Internet? Network edge and core Network performance Protocol layers and service models Network security The lab of this week is about Python I - IDE and Interpreter. LectureWhat’s the Internet?Many forms: application, hardware, ongoing… How does the Internet work?People access Internet with Wi-Fi, 4G and so on.Medium: optical fiber光纤, metal, radio…Methods: Packet switches 分组交换 Protocols协议: TCP/IP, HTTP, 802.11 Framework: Layered(from global to local): ISO/OSI - 7, IP stack - 5 Protocols协议Protocols define format, order of messages sent and received among network entities, and actions taken on message transmission, receipt.协议定义格式，在网络实体之间发送和接收消息的顺序，以及在消息传输和接收时所采取的动作。Network protocols: Machines rather than humans All communication activity in Internet governed by protocols. 所有互联网上的活动都收到协议的控制。 How to build the Internet world?Infrastructure 基础设施 Communication Channel 沟通渠道 Provided by ISP 由ISP提供 Computing Service Servers or Cloud Provided by institutions or Cloud Service Provider 由机构或云服务提供商提供 Applications A variety of applications with nice GUI 应用程序 Provided by many companies and developers 公司和开发者 StandardsIETF (Internet Engineering Task Force)https://www.ietf.org/This’s their website. Network edge and coreNetwork edge = Host: 主机 Clients: PCs, Mobile phones, Smart Servers: normally hosted in data centers Physical media to access networks: Wired or wireless communication links Network core: Interconnected routers 互联路由器 Network of networks Access networks and physical mediaHow to connect end systems to edge router? 如何连接终端系统到边缘路由器 Residential access nets 住宅 Institutional access networks 机构 Mobile access networks 移动设备 Keep in mind: Bandwidth (bits per second) of access network? 网络的访问带宽 Shared or dedicated? 共享还是专用 Dial-up Internet accessDial-up Internet access is a form of Internet access that uses the facilities of the public switched telephone network (PSTN) to establish a connection to an Internet service provider (ISP) by dialing a telephone number on a conventional telephone line. Dial-up connections use modems to decode audio signals into data to send to a router or computer, and to encode signals from the latter two devices to send to another modem.拨号互联网接入是利用公共电话交换网(PSTN)的设施，通过在传统电话线上拨打电话号码，与互联网服务提供商(ISP)建立连接的互联网接入形式。拨号连接使用调制解调器将音频信号解码成数据发送到路由器或计算机，并将后两个设备发出的信号编码发送到另一个调制解调器。带宽: 56 Kbps Digital subscriber lineaka DSL 数字用户线Telephone line based: to central office DSL Access Multiplexer aka DSLAM data over DSL phone line goes to internet voice over DLS phone line goes to telephone net 带宽: Upstream transmission rate &lt; 2.5 Mbps (typically &lt; 1Mbps) 上行传输速率 Downstream transmission rate &lt; 24 Mbps (typically &lt; 10Mbps) 下行传输速率 ADSL = Asymmetric Digital Subscriber Line 非对称数字用户线路 Access network: cable network (TV net based)接入网:有线网络(基于电视网络)key technology: Frequency division multiplexing (FDM) 频分复用 Different channels transmitted in different frequency bands 不同的信道在不同的频段传输 HFC: hybrid fiber coax 混合光纤同轴电缆 Asymmetric: 30Mbps downstream transmission rate, 2 Mbps upstream transmission rate. 非对称:下行速率为30Mbps，上行速率为2mbps。 Access network: fiber to the home光纤到家 Access network: home network Enterprise access networks (Ethernet)以太网（企业用）Typically used in companies, universities, etc.10 Mbps, 100Mbps, 1Gbps, 10Gbps transmission rates.Today, end systems typically connect into Ethernet switch. 终端系统通常连接到以太网交换机。 Wireless access networksShared wireless access network connects end system to router ,via base station, aka “access point”. 共享无线接入网将终端系统连接到路由器，通过基站，也就是“接入点”。 Physical mediatwisted pairtwo insulated copper wires 双绝缘铜线 category 5:100 Mbps, 1 Gbps Ethernet category 6:10 Gbps coaxial cabletwo concentric copper conductors 两根同心铜导线 bidirectional 双向 broadband: multiple channels on cable 宽带 fiber optic cableglass fiber carrying light pulses, each pulse a bit 玻璃纤维携带光脉冲，每个脉冲一点 high-speed operation: high-speed point-to-point transmission 点对点高速传输 low error rate: repeaters spaced for apart, immune to eletromagnetic noise 中继器间隔，不受电磁噪声影响 radioSignal carried inelectromagnetic spectrum 电磁波谱中携带的信号 No physical “wire” bidirectional 双向Propagation environment effects: 传播环境影响 Reflection Obstruction by objects 物体的阻碍 Interference! 干扰 Radio link types: Wireless LAN (e.g., WiFi) 54 Mbps – 9.6Gbps Wide-area (e.g., cellular) 4G cellular: ~ 100 Mbps 5G cellular: ~ 1Gbps Satellite Kbps to 45Mbps channel (or multiple smaller channels) Starlink ~ 1440Mbps 270 msec end-end delay Network Core Mesh of interconnected routers. 互连路由器的网状结构 Packet-switching: 分组交换 Hosts break application-layer messages into small packets. 主机将应用层消息分解成小数据包 Packages are forwarded from one router to the next, across links on path from source to destination. 包从一个路由器转发到下一个路由器，在从源到目的地的路径上跨越链接 Two key network-core functions Routing: determines source- destination route taken by packets (routing algorithms) 路由:确定数据包采取的源-目的路由。 Forwarding: move packets from router’s input to appropriate router output. 转发:将数据包从路由器的输入端移动到相应的路由器输出端。 Packet Switchingstore-and-forward queueing delay, lossif arrival rate (in bits) to link exceeds transmission rate of link for a period of time: 如果一段时间内到达链路的速率超过了链路的传输速率 packets will queue, wait to be transmmitted on link 报文将排队，等待链路传输 packets can be dropped (lost) if memory (buffer) fills up 如果内存(缓冲区)被填满，包会被丢失 Circuit switching dedicated resources专用资源: no sharing circuit-like (guaranteed) performance 电路性能 Circuit segment is idle if not used by call (no sharing) 如果没有调用，电路段空闲 Commonly used in traditional telephone networks FDM &amp; TDM Packet VS CircuitPacket switching allows more users to use network! 分组交换允许更多的用户使用网络。Is packet switching a “winner?” PS advantages: resource sharing simpler, no call setup PS drawbacks: excessive congestion possible: delay and loss protocols needed for reliable data transfer, congestion control How to provide circuit-like behavior PS? Bandwidth guarantees New methods should be developed Internet: Network of networks End systems connect to Internet via access ISPs (Internet Service Providers) 终端系统通过接入isp(互联网服务提供商)连接到互联网 residential, company and university ISPs Access ISPs in turn must be interconnected. 接入isp也必须相互连接 so that any two hosts can send packets to each other Resulting network of networks is very complex evolution was driven by economics and national policies Q: Given millions of access ISPs, how to connect them to together?Option 1: connect each access ISP to every other access ISPA: connecting each access ISP to each other directly doesn’t scale: O(N2) connections. 将每个访问ISP直接连接到彼此并不具有伸缩性:O(N2)连接。 Option 2: connect each access ISP to one global transit ISP Network performancePackage Loss, Delay and Bandwidth How do loss and delay occur? Four sources of packet delay dproc: nodal processing 节点处理 check bit errors 检查位错 determine output link 确定输出环节 typically &lt; msec dqueue: queueing delay 队列延迟 time waiting at output link for transmission 输出链路等待传输的时间 depends on congestion level of router 取决于路由器的拥塞水平 dtrans: transmission delay L: packet length (bits) R: link bandwidth (bps) dtrans = L/R dprop: propagation delay: d: length of physical link s: propagation speed (~2.9x10^8 m/sec) dprop = d/s dtrans and dprop very different. Queueing delay Packet Loss丢包 Queue (aka buffer) preceding link in buffer has finite capacity 队列前的链接在缓冲区有有限的容量 Packet arriving to full queue dropped (aka lost) 到达队列满的数据包被丢弃 Lost packet may be retransmitted by previous node, by source end system, or not at all 丢失的数据包可以由前一个节点、源端系统重传，或者根本不重传 Throughput吞吐量Definition: rate (bits/time unit) at which bits transferred between sender/receiver 在发送方/接收方之间传输比特的速率Two kinds of throughput: instantaneous瞬时: rate at given point in time 给定时间点的速率 average平均: rate over longer period of time 较长时期内的比率 服务器传送bits到管道里，管道带着fluid以Rsbits/sec速度运行，穿过buffer之后以Rcbits/sec速度运行，最后到达用户处 Internet ScenarioPer-connection end-end throught: min{Rc,Rs,R/10}In practice: Rc or Rs is often bottleneck. Protocol layers and service modelsInternet protocol stack ISO/OSI reference model Encapsulation封装Why layering? 为什么要分层 divide complex systems to simple components 把复杂的系统分割成简单的部分 easy to maintenance 易于维护 flexible for updating 可以灵活的升级 Network securityQ: Field of network security how bad guys can attack computer networks how we can defend networks against attacks how to design architectures that are immune to attacks Q: Internet not originally designed with (much) security in mind Original vision: “a group of mutually trusting users attached to a transparent network” Internet protocol designers playing “catch-up” Security considerations in all layers Types Malware恶意软件: virus, worm, spyware 病毒、蠕虫、间谍软件 DDoS: Distributed denial of service attack 分布式拒绝服务攻击 Packet “sniffing” LabTask: Install Python and PyCharm Build a virtual Python runtime environment using Virtualenv Write a hello world code in a python script file (.py file) in PyCharm Study variables and print in Python – number / string / list / dict Study conditionals in Python Study loops – for and while 这就没必要写了，INT104都学过了。 References XJTLU MC PowerPoint slides (CAN201 Week1 Lecture1 &amp; Lab1) 计算机网络 自顶向下方法.原书第6版","link":"/2021/08/12/preview-can201W1/"},{"title":"icarus使用知识","text":"前几天用yilia改subnav，莫名其妙的又把yilia改出问题了，这次干脆直接把主题换掉了，一步到位。不得不说icarus确实是个非常优秀的主题，首先图标就是调用的GitHub上的fontawesome库，再也不用自己调整图标了😅 有空再研究研究图片的设置了。 I. 安装icarusGithub链接: https://github.com/ppoffice/hexo-theme-icarusIcarus网站链接: https://ppoffice.github.io/hexo-theme-icarus/安装过程和教程里写的差不多，但是有的时候会提示node缺少依赖，需要按照要求安装相对应的依赖，就可以解决这个问题。这时候就可以发现多在myblog目录下多了一个_config.icarus.yml文件，这个文件就是负责配置icarus主题的。（这个配置文件的位置和yilia的配置文件不一样，需要注意一下）老版的icarus下载的时候是自带这个文件的，但是新版的（version4.0.0）现在好像没有了，当运行的时候假如检测到没有会自动生成，所以不用担心。 II. _config.icarus.yml配置这个配置文件一般就在myblog下，假如没有的话可以去myblog\\themes\\icarus\\下看有没有_config.yml文件。There’re many kinds of setting in this doc. Most have been explained clearly. variantTwo kinds of variants: “default” &amp; “cyberpunk”. I picked default one cus it’s easier to read and customize. logoThis part is for setting up the logo in the website header. Pic and str are available. headfaviconKeeping the old favicon. Url and pic are both available here. other optionsI didn’t edit other options. Since there’s no need for these options currently. navbarmenuThe horizontal menu on the top of the website. I deleted about button. linksThe GitHub icon on the right-top of web. footerThree icons on the right-bottom of web. articleCode highlight and readtime settings are in this part. I think it’s nice for now, so didn’t edit them. searchNo edit. comment经过考虑选择了Facebook的评论插件，先用用再说。 share用的是sharethis插件。进去之后选择Start with Share Buttons，然后开始自定义按钮并登陆该网站（提醒一下自己使用163邮箱登录的）。最后，从HTML代码段中复制src中的URL地址到分享按钮配置中。 1&lt;script type=&quot;text/javascript&quot; src=&quot;https://platform-api.sharethis.com/js/sharethis.js#property=6113d16f12036d00122e6422&amp;product=inline-share-buttons&quot; async=&quot;async&quot;&gt;&lt;/script&gt; donate有一说一不大好意思开这个功能，先不开吧。 sidebar两边的sidebar都是可以移动的，这样看起来页面会充实一些，不会太空。 widgets这里是页面左右组件，在个人介绍页面上最爽的就是可以通过调用GitHub的fontawesome库，这样可以添加很多subnav的标志。假如设置了gravatar链接，会优先提取邮箱的头像作为avatar，所以那里不要设置邮箱。 plugins &amp; providersNo edit. III. markdown新增加知识icarus主题需要在markdown文件里设置toc: true。这样才可以正常在左侧sidebar显示目录。设置中的categories可以设置文章的分类。顶端设置中 1234567title: icarus使用知识date: 2021-08-11 10:42:54tags: [hexo, icarus, blog]toc: truecategories: [blog note]thumbnail: #侧边栏缩略图cover: #文章封面图","link":"/2021/08/11/icarus%E4%BD%BF%E7%94%A8%E7%9F%A5%E8%AF%86/"},{"title":"flutter运行说明","text":"flutter前端项目库的调用操作，就从0开始呗。其实这个框架还有dart语言都还挺不错的，有时间可以细细的学一下。这种一次性可以开发多个客户端的语言也该还是有很大前景的。 Install Flutter unzip 'the position of package' export PATH=pwd/flutter/bin:$PATH flutter doctor Build Clone repo git clone https://github.com/projectName/projectName.git Run flutter pub get to install dependencies Run flutter pub run build_runner watch to generate code Run flutter run For Flutter newbieA few resources to get you started if this is your first Flutter project:Lab: Write your first Flutter appCookbook: Useful Flutter samplesFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference. Some shitty informationEverything in Flutter is a widget.主页储存在\\lib\\main.dart里，语料卡片在\\lib\\compoents\\ExtentGrid.dart里目前对于页面在手机上的想法是，通过获得设备屏幕的宽度，依照宽度来决定首页的布局，假如屏幕宽度大于500px就使用默认的布局方式，假如小于500px就去掉两边的留白，直接把语料卡片的大小设置为屏幕的大小。通过对已经写过的代码的分析，dart可以使用if, else if, else语句 ReferencesDart Cheat Sheet","link":"/2021/08/03/flutter%E8%BF%90%E8%A1%8C%E8%AF%B4%E6%98%8E/"},{"title":"yilia已知问题和部分解决方案","text":"目前blog出现了一些问题，有的已经解决，在这里有解决的方法，还有一些没有解决需要继续研究。不需要继续研究了，框架已经从yilia换成了icarus。 I. 文章内目录文章内目录自带的颜色很丑，是一种怪异的蓝色，现在已经改成了橘色。大部分相关的设置都可以搜索tooltip搜索到，但是在目录的旁边有一个冒泡的符号颜色一直不能修改，原因是这个符号是一个icon，颜色是自带的，不是加上去的，所以已经把background-image修改成了none。该问题已解决。 II. subnav设置yilia自带的subnav有很多社交网络可以选择，但是我想加一个instagram上去。按照网上的教程已经把svg文件打包成功了，但是在console里调用npm run dev的时候一直报缺少sass错误。安装sass也没有成功。该问题待解决 III. left-col-headerleft-col-header就是在左侧头上上面的那一小块区域。在电脑上的显示大小是300px*180px。图片的设置在/themes/yilia/main.0cf68a.css中，调整background-image后面的url就可以了。但是这个图片在手机端上显示的有重复，还没有得到解决。之前看起来手机端上是使用nav自动调整在窄屏上的适配。该问题待解决 IV. 返回页面顶部按钮原来是可以用的，但是莫名其妙的挂了，现在还不知道为什么。估计是搜索top寻找相关信息。该问题待解决 V. 返回js报错有个litten.me:9005一直在访问，这是个原来编写yilia的xd做的统计功能。导致在chrome的页面上看起来要加载很久。可以在themes\\yilia\\source\\main.0cf68a.js中找到192function，删除掉函数内的内容，就ok了。该问题已解决。 VI. 添加文章置顶功能先安装插件： 12npm uninstall hexo-generator-index --savenpm install hexo-generator-index-pin-top --save 然后在/themes/*/layout（/_macro）/post.ejs输入： 12345&lt;% if (page.top) { %&gt; &lt;i class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/i&gt; &lt;font color=7D26CD&gt;置顶&lt;/font&gt; &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;&lt;% } %&gt; 最后在markdown文件的开头top设置中输入数字，数字越大优先级越高。该问题已解决。 VII. 置顶的标签问题打开文章之后左上角会有一个紫色的小置顶标签，看起来有点丑，但是不影响正常使用，还不知道怎么美化。该问题待解决 VIII. aboutme显示问题好像打开网站之后aboutme的显示总是会慢一拍，现在莫名其妙的好了。该问题已解决。","link":"/2021/08/02/yilia%E5%B7%B2%E7%9F%A5%E9%97%AE%E9%A2%98%E9%83%A8%E5%88%86%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"},{"title":"hexo使用说明","text":"这个blog的框架使用的是hexo，themes是下载的yilia，可以从github上免费下载。自己调整了一些配置，主要是记录一下调整的内容和一些代码命令。 I. 下载的链接hexo估计下载的几率比较小，主要是参考了b站上的一个视频教程。但是yilia主题偶尔还是会发生一些错误，需要重新下载并配置：yilia下载链接。 II. 简单代码操作进入root目录: sudo su 后输入password本地调试: hexo clean + hexo g + hexo s推到远端: hexo d 然后输入GitHub的账户和密码创建笔记: hexo n &quot;笔记名称&quot; 然后就可以在/source/_posts目录下找到对应的笔记文件大多数的root代码就是这些，应该可以满足日常的需求。 III. blog的配置在本地的文件中，有两个名字一样的配置文件夹，都叫_config.yml，但是这两个有本质性的区别。myblog目录下的_config.yml调整的是整个网站的配置内容。themes目录下的_config.yml针对的是blog主题的配置，一般来说这个用的多一点。 themes目录下的_config.yml大部分的操作其实这个文件里的注释都已经写的比较清楚了，但是还是有一些需要注意的地方。在这个文件里true表示功能已经打开，false表示功能已经关闭。menu菜单中有一个随笔目前还没有弄懂是做什么的。已经在菜单中添加了归档，可以按照日期检查所有的blog文章。添加了author和subtitle，这两部分内容将显示在主页的头像下面。主页左边栏上的社交网络表示在文件里是subnav，可以在该文件中修改地址，目前还没有想出添加新的社交网络的方法，本来想加一个Instagram上去，但是npm run dev一直显示缺少sass文件，装了半天也没有装上去，好像和node的版本有关系（触及知识盲区）😅 有人知道怎么改的话请告诉我。在subnav里还有一个rss目前还不知道是干什么的，估计和底下的rss有点关系。快速到顶端的功能，目前已关闭，测试的时候是可用的，但是每次过一阵子不管这个按钮就挂了，目前不知道原因。上面的目录功能可以打开，所有文章都会显示目录。头像是avatar，调用的是/yilia/source/assets里面的head.jpeg。同理标签页上的是favicon，图片也保存在这个上面的文件夹里。评论功能还没有研究明白，目前已经关闭，后面可能会开启。打赏功能估计后面也不会开启，没什么卵用。友链目前也关掉了，还没有想好需要什么样的友链加上去，其他有blog的同学可以来一起交流，其实感觉可以吧csdn和leetcode这种网站加上去，我也不太懂。tag的开关默认设置为了打开，因为关闭按钮的颜色被我修改目录颜色的时候不小心给改成了橘色，现在看起来有点丑，所以就一直保存开的状态吧（css源码实在是太多了）。右滑块的背景颜色使用的是BrulyWood到OldLace的渐变，因为没想出来用什么样的背景比较好看，所以只改了个颜色。还有aboutme部分不知道为什么一打开网页的时候会显示brbr标签，需要过一会才会变成正常的排版，手机端可能也是相同情况。 myblog目录下的_config.yml这个文件中主要是关于hexo的配置。我把本地的端口设置为了4001，因为4000经常会被莫名其妙的占用。包括添加了一部分关于jsonContent的设置，这样滑块目录内容才可以正常使用。网站的名字目前是divide÷，因为没有想出更好的名字，就用微信名先代替。deploy里设置的是git的内容，保证每次能推到GitHub的仓库里。 IV. CSS&amp;HTML5的内容这部分内容其实挺多挺杂的，因为hexo框架和yilia本身就带了很多内容，而且格式很乱，非常难以辨别，主要可以使用Chrome浏览器的开发者模式去定位需要修改的模块和内容，再去vscode里搜索直接进行修改，这样会方便一些。","link":"/2021/08/01/hexo%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"},{"title":"Markdown的语法知识","text":"这是一篇简单介绍和记录Markdown语法的笔记，参考的一些网上的资料和CSDN的文章。 I. 标题1.使用#表示标题其中#必须在行首，在标题的前面的#越少，标题的字体就越大 （从一个#到五个#都有） 2.使用===或者---表示例如：一级标题用===二级标题用--- II. 分割线使用三个或以上的-或者*表示，且这一行只有符号，注意不要被识别为二级标题即可，例如可以为往中间或者前面加上空格- - -* * * III. 斜体和粗体使用*和**分别表示斜体和粗体，例如：斜体 粗体 斜体+粗体删除线用两个～，例如：～～这是要删除的文字～～删除文字部分失败了，不过感觉用处不大 IV. 超链接和图片超链接和图片的写法类似，图片仅在超链接之间多加了一个!超链接写法分别是：网站写法(Google)图片的例子: V. 无序列表使用-,+,*表示无序列表，前后留一行空白，可以嵌套，例如： 一层 二层 二层 三层 四层 一层 VI. 有序列表使用1. （点后面有个空格）表示有序列表 一层 一层 这一级别的列表没有显示出序号 一层 VII. 文字应用使用&gt;表示，可以有多个&gt;，表示层次更深 the first floor the second flooralthough i used the &gt; in the beginning. this is still the second floor the third floor have a line of space. here is the first floor now VIII. 行内代码块用`表示:行内代码块有一些字符需要转译，使用反斜杠\\进行转译 IX. 代码块使用四个缩进表示代码块，一般使用三个`表示 public static void main(String[] args){ System.out.println(“Hello World”); }上面的代码没有按照要求显示出来，不过底下的已经出来了上面的意义不大，以底下的写法为准下面是有highlight和行数提醒的代码 123public static void main(String[] args){ System.out.println(&quot;Hello World);} X. 表格直接看例子，第二行的---:表示了对齐方式，默认左对齐，还有右对齐和居中|商品|数量|单价||—|—:|:—:||苹果|10|$1||电脑|1|$1000|表格失败了，没有显示出来，需要完善 XI. 流程图主要的语法为 name=&gt;type: describe，其中type主要有以下几种：1.开始和结束：start end2.输入输出：inputoutput3.操作：operation4.条件：condition5.子程序：subroutine语法参考网站：流程图语法参考估计流程图很少用得上 XII. 数学公式使用$表示，其中一个$表示在行内，两个$表示独占一行$$E=mc^2$$支持LaTeX编辑显示，访问MathJax参考更多用法推荐一个数学公式在线编译网站：https://private.codecogs.com/latex/eqneditor.php XIII. 支持HTML标签1. 段落的缩进例如想要段落的缩进，可以如下：&nbsp;&nbsp;不断行的空白格&nbsp;或 &ensp;&ensp;半方大的空白&ensp;或 &emsp;&emsp;全方大的空白&emsp;或  2. 页面内跳转点我跳转点我跳转的功能这里演示不了，写法如下： &lt;h6 id='anchor'&gt;我是一个锚点&lt;/h6&gt; XIV. 参考文章Markdown语法介绍（详细）","link":"/2021/07/29/markdown%E8%AF%AD%E6%B3%95/"}],"tags":[{"name":"XJTLU","slug":"XJTLU","link":"/tags/XJTLU/"},{"name":"CPT203","slug":"CPT203","link":"/tags/CPT203/"},{"name":"Lecture","slug":"Lecture","link":"/tags/Lecture/"},{"name":"INT201","slug":"INT201","link":"/tags/INT201/"},{"name":"flutter","slug":"flutter","link":"/tags/flutter/"},{"name":"dart","slug":"dart","link":"/tags/dart/"},{"name":"blog","slug":"blog","link":"/tags/blog/"},{"name":"yilia","slug":"yilia","link":"/tags/yilia/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"icarus","slug":"icarus","link":"/tags/icarus/"},{"name":"Markdown","slug":"Markdown","link":"/tags/Markdown/"},{"name":"CAN201","slug":"CAN201","link":"/tags/CAN201/"},{"name":"Lab","slug":"Lab","link":"/tags/Lab/"}],"categories":[{"name":"XJTLU note","slug":"XJTLU-note","link":"/categories/XJTLU-note/"},{"name":"SURF note","slug":"SURF-note","link":"/categories/SURF-note/"},{"name":"blog note","slug":"blog-note","link":"/categories/blog-note/"},{"name":"problem solving","slug":"problem-solving","link":"/categories/problem-solving/"}]}